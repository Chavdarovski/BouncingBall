/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bouncingball;
import java.awt.Color;
import java.awt.Graphics;
import javax.swing.*;
import java.awt.event.*;
import java.util.Random;

/**
 *
 * @author User
 */
public class Ball extends javax.swing.JPanel implements Runnable{
    
    private int Slow = 10;
     protected Timer timer = new Timer(Slow, new TimerListener());
    protected Thread thr = new Thread(this);
    private int x = 20;
    private int y = 20;
    private int radius = 10;
    private int dx = 2;
    private int dy = 2;
    
    private Color clr = Color.BLUE;
    protected boolean play = true;
    
    /**
     * Creates new form Ball
     */
    public Ball() {
        thr.start();
    }
    
    public void run(){
        while(true){
            try{
                if(play){
                    repaint();
                }
                thr.sleep(Slow);
            }catch(Exception e){
                
            }
        }
    }
private class TimerListener implements ActionListener{
    public void actionPerformed(ActionEvent e){
        repaint();
    }
}
protected void paintComponent(Graphics g) {
        super.paintComponent(g);
    }
@Override
        public void paint(Graphics g) {
        super.paint(g);

        g.setColor(clr);
             Random rnd = new Random();
        if (x < radius) {
            dx = Math.abs(dx);
          clr = new Color(rnd.nextInt(255), rnd.nextInt(255), rnd.nextInt(255));
        }
        if (x > getWidth() - radius) {
            dx = -Math.abs(dx);
            clr = new Color(rnd.nextInt(255), rnd.nextInt(255), rnd.nextInt(255));
        }
        if (y < radius) {
            dy = Math.abs(dy);
            clr = new Color(rnd.nextInt(255), rnd.nextInt(255), rnd.nextInt(255));
        }
        if (y > getHeight() - radius) {
            dy = -Math.abs(dy);
             clr = new Color(rnd.nextInt(255), rnd.nextInt(255), rnd.nextInt(255));
        }
     
          x += dx;
        y += dy;

        g.fillOval(x - radius, y - radius, radius * 2, radius * 2);
        }
        public int euclidian(int x, int y, int x2, int y2) {
        int rez = (x - x2) * (x - x2) + (y - y2) * (y - y2);
        return (int) Math.sqrt(rez);
    }
 public void suspend() {
        play = false;
    }

    public void resume() {
        play = true;
    }

    public void setBavno(int delay) {
        this.Slow = delay;
    }

    public void setBoja(Color boja) {
        this.clr = boja;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ball.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ball.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ball.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ball.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ball().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
